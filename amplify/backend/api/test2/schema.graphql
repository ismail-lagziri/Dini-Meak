type User @model {
  id: ID!
  username: String!
  email: String!

  orders: [Order] @connection(keyName: "byUser", fields: ["id"])
  car: Car @connection(fields: ["id"])
}

type Car @model
  @key(name: "byUser", fields: ["userId"]) {
  id: ID!
  type: String!
  latitude: Float,
  longitude: Float,
  heading: Float,
  isActive: Boolean

  orders: [Order] @connection(keyName: "byCar", fields: ["id"])

  userId: ID!
  user: User @connection(fields: ["userId"])
}

type Order @model
  @key(name: "byUser", fields: ["userId"])
  @key(name: "byCar", fields: ["carId", "createdAt"]) {
  id: ID!
  createdAt: String!

  type: String!
  status: String,

  originLatitude: Float!
  oreiginLongitude: Float!

  destLatitude: Float!
  destLongitude: Float!

  userId: ID!
  user: User @connection(fields: ["userId"])

  carId: ID!
  car: Car @connection(fields: ["carId"])
}

type Subscription {
  onOrderUpdated(id: ID!): Order @aws_subscribe(mutations: ["updateOrder"])
  onCarUpdated(id: ID!): Car @aws_subscribe(mutations: ["updateCar"])
}
